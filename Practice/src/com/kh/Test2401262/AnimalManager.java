package com.kh.Test2401262;

public class AnimalManager {
	/*
	 * 추상 클래스
	 * - 미완성된 클래스
	 * - 객체 생성이 불가 (단, 레퍼런스 변수(참조변수) 선언 가능)
	 * - 일반 필드 + 일반 메소드 [+ 추상 메소드] => 추상 메소드 없어도 추상 클래스 만들 수는 있음
	 * => 추상 메소드를 가진 클래스는 반드시 추상 클래스로 명시해야 함
	 * // 무조건 메소드 유무가 기준
	 * 
	 * #추상 메소드가 굳이 없어도 추상 클래스를 사용할 수 있을까? 예
	 *   > 개념적으로 사용, 단지 이 클래스가 미완성된 클래스다 라는 것을 알리기 위해서
	 *   // 추상 클래스는 객체 생성 못하기 때문에 이걸로 객체 생성 하지 말라는 뜻
	 *   > 프로그래밍적 : 객체 생성이 불가능하게 하고자 할 때
	 *   
	 * #추상 메소드가 있는 추상 클래스를 사용하는 이유
	 *   > 부모 클래스에 추상 메소드가 존재할 경우
	 *     자식 클래스에서는 강제로 오버라이딩 해서 동일한 패턴의 메소드를 가지게 된다.
	 *     >> 각 자식 클래스마다 실행 시킬 내용은 다르지만 동일한 형태의 메소드로 구현했으면 할 때
	 */
	
	public static void main(String[] args) {
		
		Animal[] ani = new Animal[5];
		
		ani[0] = new Cat("몽이", "고양이", "현지네 집", "오렌지색");
		ani[1] = new Dog("쿠키", "장모치와와", 1);
		ani[2] = new Dog("메이", "진돗개", 5);
		ani[3] = new Cat("리본", "러시안 블루", "추운 지방", "회색");
		ani[4] = new Dog("브로콜리", "리트리버", 3);
		
//		for (int i = 0; i < ani.length; i++) {
//			ani[i].speak();
//		}
		
		for (Animal a : ani) {
			a.speak();
		}
	}

}
